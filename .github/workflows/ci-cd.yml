name: CI/CD Pipeline

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ master ]

jobs:
  # Job 1: Run tests on pull requests
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Generate test data
      run: |
        cd src
        python data_generator.py
        
    - name: Train model
      run: |
        cd src
        python model.py
        
    - name: Run unit tests
      run: |
        python -m pytest tests/test_all.py -v --tb=short
        
    - name: Run code quality checks
      run: |
        flake8 src/ --count --exit-zero --max-complexity=10 --statistics
        
    - name: Test Flask application
      run: |
        cd src
        timeout 30s python app.py &
        sleep 10
        curl -f http://localhost:5000/health || exit 1
        pkill -f "python app.py" || true

  # Job 2: Build and trigger Jenkins on master merge
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/student-performance-ml:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/student-performance-ml:${{ github.run_number }}
          ${{ secrets.DOCKERHUB_USERNAME }}/student-performance-ml:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Trigger Jenkins Job
      if: success()
      run: |
        if [ -z "${{ secrets.JENKINS_URL }}" ] || [ -z "${{ secrets.JENKINS_USER }}" ] || [ -z "${{ secrets.JENKINS_TOKEN }}" ] || [ -z "${{ secrets.JENKINS_JOB_NAME }}" ]; then
          echo "⚠️ Jenkins secrets not configured. Skipping Jenkins trigger."
          echo "To enable Jenkins integration, configure the following secrets:"
          echo "- JENKINS_URL"
          echo "- JENKINS_USER" 
          echo "- JENKINS_TOKEN"
          echo "- JENKINS_JOB_NAME"
          exit 0
        fi
        
        # Trigger Jenkins job with parameters
        curl -X POST \
          -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
          "${{ secrets.JENKINS_URL }}/job/${{ secrets.JENKINS_JOB_NAME }}/buildWithParameters" \
          -d "DOCKER_IMAGE_TAG=${{ github.run_number }}" \
          -d "GIT_COMMIT=${{ github.sha }}" \
          -d "GIT_BRANCH=${{ github.ref_name }}" \
          -d "BUILD_NUMBER=${{ github.run_number }}" \
          -d "REPOSITORY_URL=${{ github.server_url }}/${{ github.repository }}"
          
        echo "✅ Jenkins job triggered successfully"
        
    - name: Create deployment summary
      if: success()
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Docker Image**: \`${{ secrets.DOCKERHUB_USERNAME }}/student-performance-ml:${{ github.run_number }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Git Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Number**: \`${{ github.run_number }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Jenkins Job**: Triggered successfully" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Ready for deployment" >> $GITHUB_STEP_SUMMARY