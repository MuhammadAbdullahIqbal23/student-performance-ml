name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, dev ]
  pull_request:
    branches: [ master, main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pylint flake8
    
    - name: Run tests
      run: |
        pytest tests/ -v --tb=short

    - name: Run flake8
      run: |
        flake8 src/ tests/ --max-line-length=100 --extend-ignore=E203,W503

    - name: Run pylint
      run: |
        pylint src/ tests/ --disable=C0114,C0115,C0116
      continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/student-performance-ml:dev
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/student-performance-ml:dev
        cache-to: type=inline

  trigger-jenkins:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')

    steps:
    - name: Trigger Jenkins Build
      run: |
        curl -X POST \
          "${{ secrets.JENKINS_URL }}/job/${{ secrets.JENKINS_JOB_NAME }}/buildWithParameters" \
          --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
          --data-urlencode "BRANCH_NAME=${{ github.ref_name }}" \
          --data-urlencode "COMMIT_SHA=${{ github.sha }}" \
          --data-urlencode "COMMIT_MESSAGE=${{ github.event.head_commit.message }}"
    
    - name: Notify Jenkins Trigger
      run: |
        echo "âœ… Successfully triggered Jenkins job for master branch merge"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
